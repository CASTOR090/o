package br.itb.projeto.pizzaria3e.service;

import java.io.IOException;
import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import br.itb.projeto.pizzaria3e.model.entity.Produto;
import br.itb.projeto.pizzaria3e.model.repository.CategoriaRepository;
import br.itb.projeto.pizzaria3e.model.repository.ProdutoRepository;
import jakarta.transaction.Transactional;

@Service
public class ProdutoService {
	
	private ProdutoRepository produtoRepository;
	private CategoriaRepository categoriaRepository;
		
	public ProdutoService(ProdutoRepository produtoRepository, CategoriaRepository categoriaRepository) {
		super();
		this.produtoRepository = produtoRepository;
		this.categoriaRepository = categoriaRepository;
	}

	public Produto findById(long id) {
		Optional<Produto> produto = produtoRepository.findById(id);

		if (produto.isPresent()) {
			return produto.get();
		}
		return null;
	}
	
	public List<Produto> findAll(){
		List<Produto> produtos = produtoRepository.findAll();
		return produtos;
	}
	
	@Transactional
	public Produto createComFoto(List<MultipartFile> files, Produto produto) {
	    if (files != null && !files.isEmpty()) {
	        try {
	            // Exemplo simples: pega a primeira foto
	            produto.setFoto(files.get(0).getBytes());

	            // ðŸš€ Se quiser salvar todas as imagens, vocÃª precisa ter uma tabela ProdutoFoto separada
	            // com relacionamento OneToMany, porque no seu Produto sÃ³ existe um campo foto (byte[]).
	        } catch (IOException e) {
	            e.printStackTrace();
	        }
	    } else {
	        produto.setFoto(null);
	    }
	    produto.setStatusProduto("ATIVO");

	    return produtoRepository.save(produto);
	}
}
